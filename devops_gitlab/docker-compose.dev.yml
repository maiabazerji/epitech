services:
  database:
    image: postgres:latest
    container_name: postgres
    ports:
      - ${DATABASE_PORT}:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - dev-network

  nginx:
    container_name: nginx-dev
    image: nginx:1.17.6
    volumes:
      - ./nginx/default.dev.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - dev-network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - ${FRONTEND_PORT}:4200
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules #TODO: CHECK HOW THIS WORKS
    networks:
      - dev-network

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${BACKEND_PORT}:8080
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge
